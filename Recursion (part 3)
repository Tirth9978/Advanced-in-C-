(1) Find all Recursion of a string : -
  --> Code : 
      #include<iostream>
      #include<string>
      using namespace std;
      // For fact. 
      int fact(int n){
          if (n == 0 || n == 1){
              return 1;
          }
          int ans = n * fact(n-1);
          return ans;
      }
      
      // permutations void function
      
      void permutations(string str,int i,int count,int n){
          if (count == fact(n)){
              return ;
          }
          if (i<n-1){
              int temp = str[i];
              str[i] = str[i+1];
              str[i+1] = temp;
              cout << str << endl;
              permutations(str,i+1,count +1,n);
          }
          else {
              permutations(str,0,count,n);
          }
      }
      
      // Main function
      
      int main(){
          string str;
          cout << "Entre the string:";
          getline(cin , str);
          permutations(str,0,0,str.size());
          return 0;
      }



---------------*-------------------*----------------------*---------------------*---------------------*-----------------

(2) Towers of Hanoi:-
  -->Code :
    #include<iostream>
    using namespace std;
    
    void towersofHanoi(int start,int end,char source,char aux,char destination){
        if (start > end){
            return ;
        }
        towersofHanoi(start,end-1,source,destination,aux);
        cout << "Move disk "<< end << "from " << source<< "to "<< destination<< endl ; 
        towersofHanoi(start,end-1,aux,source,destination);
    }
    
    int main(){
        int n;
        cout << "Entre the numbers of disks:";
        cin >>n;
        towersofHanoi(1,n,'A','B','C');
        return 0;
    }

---------------*-------------------*----------------------*---------------------*---------------------*-----------------

(3) Find all substring of a main string :-
  --> Code : 
    #include<iostream>
    #include<string>
    using namespace std;
    
    int sub(string str,string output[]){
        if (str.length() == 0){
            output[0] = "";
            return 1; 
        }
    
        int num = sub(str.substr(1),output);
    
        for (int i=0;i<num;i++){
            output[i+num] = str[0] + output[i];
        }
    
        return 2 * num;
    }
    
    int main (){
        string output[1000];
        
        for (int i=0;i<sub("ABC",output);i++){
            cout << output[i]  << endl;
        }
        return 0;
    }


------------------------------------------------------------------------------------------------------------------------
