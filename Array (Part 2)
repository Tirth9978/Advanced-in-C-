(1) Rearrange poritive and negative numbers in different arrays : -
  --> Code:
    #include<iostream>
    using namespace std;
    
    int main(void){
        int n;
        cout << "Entre the size of an array:";
        cin >>n;
        int arr[n];
        for (int i=0;i<n;i++){
            cout << "Entre the number:";
            cin >> arr[i];
        }
        int nagetive_number[n];
        int positive_number[n];
        int i=0;
        int count_nagetive = 0;
        int count_positive = 0;
        while (i != n){
            if ( arr[i] < 0 ){
                nagetive_number[count_nagetive] = arr[i];
                count_nagetive++;i++;
            }
            else if (arr[i] >= 0){
                positive_number[count_positive] = arr[i];
                count_positive++;i++;
            }
        }
        cout << "Nagetive  array: ";
        for (int i=0;i<count_nagetive;i++){
            cout << nagetive_number[i]<< "  ";
        }
        cout << endl;
        cout << "Positive array:";
        for (int i=0;i<count_positive;i++){
            cout << positive_number[i] << "  ";
        }
        return 0;
    }


---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----


(2) Rotate an array to the left by one position.:-
  --> Code :
    #include<iostream>
    using namespace std;
    
    int main(void){
        int n;
        cout << "Enter the size of an array:";
        cin >> n;
        int arr[n];
        for (int i=0;i<n;i++){
            cout << "Enter the number:";
            cin >> arr[i];
        }
        int d;
        cout <<"Enter the number of rotation:";
        cin >>d;
        
        for (int i=0;i<d;i++){
            int temp = arr[0];
            for (int j= 0;j<n;j++){
                arr[j] = arr[j+1];
                if (j == n-1){
                    arr[n-1] = temp;
                }
            }
        }
        for (int i=0;i<n;i++){
            cout << arr[i] << "  ";
        }
        return 0;
    }
    
---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----

(3)Rotate an array to the right by one position.:-
  --> Code :-
    #include<iostream>
    using namespace std;
    
    int main(void){
        int n;
        cout << "Enter the size of an array:";
        cin >> n;
        int arr[n];
        for (int i=0;i<n;i++){
            cout << "Enter the number:";
            cin >> arr[i];
        }
        int d;
        cout <<"Enter the number of rotation:";
        cin >>d;
        for (int i=0;i<d;i++){
            int temp = arr[n-1];
            for (int j=n-1;j>=0;j--){
                arr[j] = arr[j-1];
                if (j == 0){
                    arr[j] = temp;
                }
            }
        }
        
        for (int i=0;i<n;i++){
            cout << arr[i] << "  ";
        }


        return 0;
    }

---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----


(4) Remove element from array by index : -
  --> Code : 
    #include<iostream>
    using namespace std;
    
    void remove_1(int *arr,int index){
        for (int i=0;i<8;i++){
            if (index == i){
                int j = i;
                while(j != 7){
                    arr[j] = arr[j+1];
                    j++;
                }
            }
        }
    }
    
    int main (void){
        // int n;
        // cout << "Enter the ";
        int arr[] = {23,45,19,43,52,78,34,23};
        cout << "Array :  ";
        for(int i =0;i<8;i++){
            cout << arr[i] << "  ";
        }
        int index;
        cout << "Enter the index to remove :";
        cin >> index;
        remove_1(arr,index);
        for (int i=0;i<7;i++){
            cout << arr[i] << "  ";
        }
    
        return 0;
    }

---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----

(5) Find the most frequent element in an array:-
  -->Code : 
    #include<iostream>
    using namespace std;
    
    int main (){
        int n;
        cout << "Enter the size of an array : ";
        cin >> n;
        int arr[n];
        for (int i=0;i<n;i++){
            cout << "Enter the number : ";
            cin >> arr[i];
        }
        int ref = arr[0];
        int count = 0;
        for (int i=0;i<n;i++){
            int ref_1 = arr[i];
            int count_1 = 0;
            for (int j=0;j<n;j++){
                if (arr[i] == arr[j] && i != j){
                    count_1++;
                }
            }
            if (count < count_1){
                ref = arr[i];
            }
        }
        cout << "frequent element in an array is " << ref;
        return 0;
    }

---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----


(6) Find the least frequent element in an array.:-
  -->Code :
    #include<iostream>
    using namespace std;
    
    int main (){
        int n;
        cout << "Enter the size of an array : ";
        cin >> n;
        int arr[n];
        for (int i=0;i<n;i++){
            cout << "Enter the number : ";
            cin >> arr[i];
        }
        int ref = arr[0];
        int count = 1;                                           //<-- Here count = 1 is main thing in this code 
        for (int i=0;i<n;i++){
            int ref_1 = arr[i];
            int count_1 = 0;
            for (int j=0;j<n;j++){
                if (arr[i] == arr[j] && i != j){
                    count_1++;
                }
            }
            if (count > count_1){
                ref = arr[i];
            }
        }
        cout << "frequent element in an array is " << ref;
        return 0;
    }

---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----

(7)Check if an array is sorted in ascending order:-
  --> Code :
    #include<iostream>
    using namespace std;
    
    bool sort(int arr[],int n){
        for (int i=0;i<n;i++){
            for (int j=i;j<n;j++){
                if (arr[i] > arr[j] && i != j){
                    return false;
                }
            }
        }
        return true;
    }
    
    int main (){
        int n;
        cout << "Enter the size of an array : ";
        cin >> n;
        int arr[n];
        for (int i=0;i<n;i++){
            cout << "Enter the number : ";
            cin >> arr[i];
        }
        if (sort(arr,n) == true){
            cout << "Array is sorted :)";
        }
        else {
            cout << "Array is not sorted :(";
        }
        return 0;
    }


---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----

(8)Find missing element in an array : -
  --> Code :
    #include<iostream>
    using namespace std;
    
    int main (){
        int arr[] = {1,4,2,6,7,8,5,3,10};
        int ref = arr[0];
        for (int i=0;i<9;i++){
            ref = arr[i];
            int count = 0;
            for (int j=0;j<9;j++){
                if (ref+1 == arr[j]){
                    count ++;
                }
                if (count != 0){
                    break;
                }
            }
            if (count == 0 ){
                break;
            }
        }
        cout << "Missing element is " << ref+1 << endl;
        return 0;
    }

---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----
(9)Find the common elements between two arrays:-
  --> Code :
    #include<iostream>
    using namespace std;
    
    int main (){
        int arr_1[] = {1,2,3,4,5};
        int arr_2[] = {4,5,6,7,8,9};
        cout << "Comman elements :  ";
        for (int i=0;i<5;i++){
            for (int j=0;j<6;j++){
                if (arr_1[i] == arr_2[j]){
                    cout << arr_1[i] << "  ";
                }
            }
        }
        return 0;
    }

---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----

(10)Check if an array is a subset of another array:-
  -->Code : 
    #include<iostream>
    using namespace std;
    
    int Check(int arr_1[],int arr_2[]){
        int count = 0;
        int j = 0;int i= 0;
        while (i != 6){
            if (arr_1[i] == arr_2[j]){
                count ++;
                j++;
            }
            i++;
        }
        if (count == 3){
            return 1;
        }
        else {
            return 0;
        }
    }
    
    int main (){
        int arr_1[] = {1,2,3,4,5,6};
        int arr_2[] = {3,4,5};
        if (Check(arr_1,arr_2) == 1){
            cout << "Yes";
        }
        else {
            cout << "NO";
        }
        return 0;
    }

---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----

(11)Find the union of two arrays:-
  --> Code :
    #include<iostream>
    using namespace std;
    
    void union1(int *arr_1,int *arr_2,int n,int m){
        int i=n;int j= 0;
        while (i < m+n){
            arr_1[i] = arr_2[j];
            i++;j++;
        }
    }
    
    int main (void){
        int n,m;
        cout << "Enter the size of array 1 : ";
        cin >>n;
        cout << "Enter the size of array 2 : ";
        cin >>m;
        int arr_1[m + n];
        int arr_2[m];
        cout << "For Array 1 : "<< endl;
        for (int i=0;i<n;i++){
            cout << "Enter the number : ";
            cin >> arr_1[i];
        }
        cout << "For Array 2 : " << endl;
        for (int i=0;i<m;i++){
            cout << "Enter the number : ";
            cin >> arr_2[i];
        }
        union1(arr_1,arr_2,n,m);
        cout << "Union of two Arrays :  ";
        for (int i=0;i<n+m;i++){
            cout << arr_1[i] << "  " ;
        }
        return 0;
    }

---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----

(12)  Find the intersection of two arrays:-
  --> Code ;
#include<iostream>
using namespace std;

int union1(int *arr_1,int *arr_2,int *Intersection,int n,int m){
    int count = 0;
    for (int i=0;i<n;i++){
        for (int j=0;j<m;j++){
            if (arr_1[i] == arr_2[j]){
                Intersection[count]  =  arr_1[i];
                count++;
            }
        }
    }
    return count;
}

int main (void){
    int n,m ;
    cout << "Enter the size of array 1 : ";
    cin >>n;
    cout << "Enter the size of array 2 : ";
    cin >>m;
    int arr_1[m + n];
    int arr_2[m];
    int Intersection[m+n];
    cout << "For Array 1 : "<< endl;
    for (int i=0;i<n;i++){
        cout << "Enter the number : ";
        cin >> arr_1[i];
    }
    cout << "For Array 2 : " << endl;
    for (int i=0;i<m;i++){
        cout << "Enter the number : ";
        cin >> arr_2[i];
    }
    union1(arr_1,arr_2,Intersection,n,m);
    cout << "Intersection of two arrays :  ";
    for (int i=0;i<union1(arr_1,arr_2,Intersection,n,m);i++){
        cout << Intersection[i] << "  ";
    }
    return 0;
}


---------------------*------------------------*-------------------------*---------------------------*---------------------------*-----------------------------------*----
